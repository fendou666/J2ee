/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.0-RC1
 * Generated at: 2017-05-31 10:27:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WorkIn;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class AuthCode_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tfunction changeImg(){\r\n");
      out.write("\t\t// 这里最后必须加上math.random， 不然只会请求一次，系统认为访问过的属性不会再次访问\r\n");
      out.write("\t\t// 就可那个纸牌设置了反转属性一样，没有变就只有效一次\r\n");
      out.write("\t\tdocument.getElementById(\"authImg\").src = \"");
      out.print(request.getContextPath() );
      out.write("/CreateImg?rand=\"+Math.random();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction checkAuthCode(){\r\n");
      out.write("\t\tvar xmlHttp;\r\n");
      out.write("\t\tif(window.ActiveXObject){\r\n");
      out.write("\t\t\txmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\r\n");
      out.write("\t\t}else{\r\n");
      out.write("\t\t\txmlHttp = new XMLHttpRequest();\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\txmlHttp.onreadystatechange = function(){\r\n");
      out.write("\t\t\tif(xmlHttp.readyState==4 && xmlHttp.status==200){\r\n");
      out.write("\t\t\t\t// 返回值0代表验证不通过，1代表通过\r\n");
      out.write("\t\t\t\tif(xmlHttp.responseText==\"0\"){\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"showErrInfo\").style.display=\"inline\";\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"showErrInfo\").style.color=\"red\";\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"showErrInfo\").innerText=\"认证不通过\";\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"showErrInfo\").style.display=\"inline\";\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"showErrInfo\").style.color=\"green\";\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"showErrInfo\").innerText=\"认证通过\";\r\n");
      out.write("\t\t\t\t}\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar authCode = document.getElementById(\"authCode\").value;\r\n");
      out.write("\t\txmlHttp.open(\"get\", \"");
      out.print(request.getContextPath() );
      out.write("/CheckImgAuthCode?authCode=\" + authCode);\r\n");
      out.write("\t\txmlHttp.send(null);\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<span>验证码:</span>\r\n");
      out.write("\t\t<input type=\"text\" name=\"authCode\" id=\"authCode\" />\r\n");
      out.write("\t\t<img src=\"../CreateImg\" id=\"authImg\" onclick=\"changeImg()\" />\r\n");
      out.write("\t\t<span id=\"showErrInfo\" style=\"display: none\">*</span>\r\n");
      out.write("\t\t<input type=\"button\" value=\"验证码检查\" onclick=\"checkAuthCode()\" />\r\n");
      out.write("\t</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
